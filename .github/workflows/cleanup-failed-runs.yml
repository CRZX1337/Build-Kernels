name: Cleanup Failed Workflow Runs - DIAGNOSTIC

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  actions: write

jobs:
  diagnostic_cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Step 0: Print initial gh CLI version
        run: gh --version

      - name: Step 1: Update gh CLI to latest version
        run: |
          gh --version # Print current version for logging before update
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y
          gh --version # Print updated version for logging after update

      - name: Step 2: Print gh CLI version AFTER update (Verification)
        run: gh --version # VERIFY VERSION AFTER UPDATE

      - name: Step 3: Get Workflow Runs (Simplified gh api command - NO --status)
        id: get_workflow_runs_diagnostic
        run: |
          echo "Starting Step 3: Get Workflow Runs (Simplified gh api - NO --status)..."

          # --- Start of Debugging Section (xtrace - set -x) ---
          set -x
          OUTPUT=$(gh api repos/CRZX1337/Build-Kernels/actions/runs --per_page 100 2>&1) # Simplified command - NO --status
          set +x
          # --- End of Debugging Section ---

          echo "--- Raw output of simplified gh api command (stdout and stderr) ---"
          echo "$OUTPUT"
          echo "--- End of raw output ---"

          if echo "$OUTPUT" | grep -q "error"; then
            echo "Error detected in simplified gh api command! Check raw output."
            exit 1
          fi

          RUNS_JSON=$(echo "$OUTPUT" | jq -r '.workflow_runs[] | .id, .name, .status, .conclusion, .html_url' 2>/dev/null)

          echo "--- Output after jq processing (simplified command) ---"
          echo "$RUNS_JSON"
          echo "--- End of jq output ---"

          if [[ -z "$RUNS_JSON" ]]; then
            echo "No workflow runs found or jq output empty (simplified command)."
          else
            echo "Workflow runs found and processed by jq (simplified command)."
          fi

          echo "DIAGNOSTIC_RUN_LIST<<EOF" >> $GITHUB_ENV # Changed env var name to avoid conflicts
          echo "$RUNS_JSON" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Step 4: Cancel Runs (Based on DIAGNOSTIC_RUN_LIST - if Step 3 works)
        if: env.DIAGNOSTIC_RUN_LIST != '' # Only run if we got runs in Step 3
        run: |
          DIAGNOSTIC_RUN_LIST="${DIAGNOSTIC_RUN_LIST}"
          IFS=$'\n' read -r -d '' -a RUN_ARRAY <<< "$DIAGNOSTIC_RUN_LIST"

          echo "Step 4: Attempting to Cancel Runs (if any from Step 3)..."

          for i in "${!RUN_ARRAY[@]}"; do
            if (( i % 5 == 0 )); then
              RUN_ID="${RUN_ARRAY[$i]}"
              RUN_NAME="${RUN_ARRAY[$i+1]}"
              RUN_STATUS="${RUN_ARRAY[$i+2]}"
              RUN_CONCLUSION="${RUN_ARRAY[$i+3]}"
              RUN_URL="${RUN_ARRAY[$i+4]}"

              echo "Checking run: $RUN_NAME (ID: $RUN_ID), Status: $RUN_STATUS, Conclusion: $RUN_CONCLUSION"

              if [[ "$RUN_STATUS" == "queued" ]] || [[ "$RUN_STATUS" == "in_progress" ]]; then
                echo "  Run is cancellable (Status: $RUN_STATUS). Cancelling..."
                gh api --method POST repos/${{ github.repository }}/actions/runs/$RUN_ID/cancel
                echo "  Run $RUN_NAME (ID: $RUN_ID) cancelled."
              else
                echo "  Run is not cancellable (Status: $RUN_STATUS). Skipping."
              fi
            fi
          done
