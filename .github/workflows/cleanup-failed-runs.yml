name: Cleanup Failed Workflow Runs

on:
  schedule:
    - cron: '0 0 * * *' # Run daily at midnight UTC (adjust as needed)
  workflow_dispatch: # Allow manual triggering

permissions:
  actions: write  # To list and cancel workflow runs

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Get Failed Workflow Runs (Attempt 3 - Super Verbose Logging)
        id: get_failed_runs
        run: |
          echo "Starting Get Failed Workflow Runs step (Attempt 3 - Super Verbose)..."

          # --- Start of Debugging Section (xtrace - set -x) ---
          # Enable xtrace - this will print each command before execution
          set -x

          # Capture both stdout and stderr into a single variable from gh api command
          OUTPUT=$(gh api repos/${{ github.repository }}/actions/runs \
            --status failure \
            --per_page 100 \
            2>&1)

          # Disable xtrace after the command
          set +x
          # --- End of Debugging Section (xtrace - set +x) ---

          # --- Debugging Output: Print the *entire* captured output ---
          echo "--- Entire captured output of gh api command (stdout and stderr) ---"
          echo "$OUTPUT"
          echo "--- End of captured output ---"
          # --- End of Debugging Output ---

          # Check for errors in gh api command (look for "error" in output)
          if echo "$OUTPUT" | grep -q "error"; then
            echo "Error detected in gh api command! Check the captured output above."
            exit 1 # Exit with error if gh api failed
          fi

          # Process with jq only if no error was detected
          FAILED_RUNS_JSON=$(echo "$OUTPUT" | jq -r '.workflow_runs[] | .id, .name, .status, .conclusion, .html_url' 2>/dev/null)

          # --- Debugging Output for jq processing ---
          echo "--- Output after jq processing ---"
          echo "$FAILED_RUNS_JSON"
          echo "--- End of jq output ---"
          # --- End of Debugging Output ---

          if [[ -z "$FAILED_RUNS_JSON" ]]; then
            echo "No failed workflow runs found or jq output is empty. FAILED_RUN_LIST will be empty."
          else
            echo "Failed workflow runs found and processed by jq. Setting FAILED_RUN_LIST environment variable."
          fi

          echo "FAILED_RUN_LIST<<EOF" >> $GITHUB_ENV
          echo "$FAILED_RUNS_JSON" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Cancel Failed Runs
        run: |
          FAILED_RUN_LIST="${FAILED_RUN_LIST}"
          IFS=$'\n' read -r -d '' -a RUN_ARRAY <<< "$FAILED_RUN_LIST"

          for i in "${!RUN_ARRAY[@]}"; do
            if (( i % 5 == 0 )); then # Every 5th line is the run ID based on jq output
              RUN_ID="${RUN_ARRAY[$i]}"
              RUN_NAME="${RUN_ARRAY[$i+1]}"
              RUN_STATUS="${RUN_ARRAY[$i+2]}"
              RUN_CONCLUSION="${RUN_ARRAY[$i+3]}"
              RUN_URL="${RUN_ARRAY[$i+4]}"

              echo "Checking run: $RUN_NAME (ID: $RUN_ID), Status: $RUN_STATUS, Conclusion: $RUN_CONCLUSION"

              # Check if the run is still running or queued (cancellable states)
              if [[ "$RUN_STATUS" == "queued" ]] || [[ "$RUN_STATUS" == "in_progress" ]]; then
                echo "  Run is cancellable (Status: $RUN_STATUS). Cancelling..."
                gh api --method POST repos/${{ github.repository }}/actions/runs/$RUN_ID/cancel
                echo "  Run $RUN_NAME (ID: $RUN_ID) cancelled."
              else
                echo "  Run is not cancellable (Status: $RUN_STATUS). Skipping."
              fi
            fi
          done
