name: Build Pixel 8 Pro Kernel

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential curl zip unzip git python3

    - name: Install Bazel
      run: |
        # Download bazelisk directly
        curl -L -o bazelisk https://github.com/bazelbuild/bazelisk/releases/download/v1.18.0/bazelisk-linux-amd64
        chmod +x bazelisk
        sudo mv bazelisk /usr/local/bin/bazel

    - name: Setup Build Environment
      run: |
        WORKSPACE_DIR=$(pwd)
        echo "Current directory: $WORKSPACE_DIR"
        mkdir -p tools
        echo "Copying bazel to tools directory"
        cp /usr/local/bin/bazel tools/
        chmod +x tools/bazel
        echo "Tools directory contents:"
        ls -la tools/
        echo "Testing bazel directly:"
        tools/bazel version
        echo "PATH=$WORKSPACE_DIR/tools:$PATH" >> $GITHUB_ENV

    - name: Prepare Kernel Source
      run: |
        # Save current directory
        WORKSPACE_DIR=$(pwd)
        echo "Workspace directory: $WORKSPACE_DIR"
        
        # Save tools
        cp -r tools /tmp/tools_backup
        echo "Tools backed up to /tmp/tools_backup"
        
        # Create temp directory for clone
        TEMP_DIR=$(mktemp -d)
        echo "Created temp directory: $TEMP_DIR"
        
        # Clone kernel source
        echo "Cloning kernel source..."
        git clone https://gitlab.hentaios.com/hentaios-gs-6.x/kernel_devices_google_shusky.git "$TEMP_DIR"
        cd "$TEMP_DIR"
        echo "Checking out Vallhound branch..."
        git checkout Vallhound
        echo "Updating submodules..."
        git submodule update --init --recursive
        
        echo "Temp directory contents:"
        ls -la "$TEMP_DIR"
        
        # Clean workspace directory
        cd "$WORKSPACE_DIR"
        echo "Cleaning workspace directory..."
        rm -rf * .[!.]* ..?*
        
        # Move kernel source
        echo "Moving kernel source to workspace..."
        mv "$TEMP_DIR"/* "$TEMP_DIR"/.[!.]* "$WORKSPACE_DIR"/ 2>/dev/null || true
        
        # Restore tools
        echo "Restoring tools..."
        cp -r /tmp/tools_backup tools
        
        # Clean up
        rm -rf "$TEMP_DIR"
        
        echo "Final workspace contents:"
        ls -la
        
        echo "Checking for build script:"
        if [ -f build_shusky.sh ]; then
          echo "build_shusky.sh exists"
          cat build_shusky.sh
        else
          echo "ERROR: build_shusky.sh not found!"
          exit 1
        fi

    - name: Build Kernel
      run: |
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        echo "Tools directory contents:"
        ls -la tools/
        if [ ! -f build_shusky.sh ]; then
          echo "ERROR: build_shusky.sh not found!"
          exit 1
        fi
        chmod +x build_shusky.sh
        ./build_shusky.sh

    - name: Upload Kernel Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: kernel-artifacts
        path: |
          out/mixed/dist/*
          bazel-bin/**/*.ko
          bazel-bin/**/*.img
